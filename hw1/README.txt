COMS 4187 Homework 1

ADDQUEUE
My addqueue program will take a space-delimited list of filenames and copy those files in to the queue. It creates a "queue" directory if one doesn't already exist. The key part of this program is that it generates a new filename for each copied file. This filename has the format: <user id>_<arbitrary hash name>_<timestamp>_<original filename>. This filename is guaranteed to be unique because it is not possible for 2 files to be added by the same user at the same time.

SHOWQUEUE
My showqueue program will read through the queue directory and print a formatted list of the files. Since all the necessary information is already stored in the queued files' names, showqueue simply parses each file name to obtain 1) arbitrary name, 2) user that added the file, 3) date & time file was added, and 4) a unique identifier (the filename generated by addqueue).

RMQUEUE
My rmqueue program will check to see if the file to be removed exists in the queue, and then check if the user who called rmqueue is the same user who added the file to be removed. If they are the same user, rmqueue deletes the file. If not, rmqueue prints an error message.

TESTS
I wrote a batch of tests in `test.py`, which can be run with `make test`. The tests for addqueue and showqueue are straightfoward, but you may be surprised to see that I fork a child process in the rmqueue test. I do this because with the Python `os` library it is illegal to manually setuid to 0 (or root). In order to test as a different user, I have to use a child process.